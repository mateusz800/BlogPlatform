{"ast":null,"code":"import _toConsumableArray from \"/Users/mateusz/Projects/website/django_react/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/mateusz/Projects/website/django_react/frontend/src/components/Pagination/Pagination.js\";\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ArrowButton from \"./ArrowButton/ArrowButton\";\nimport styles from \"./styles.module.css\";\n\nvar Pagination = function Pagination(_ref) {\n  var visible = _ref.visible,\n      actual = _ref.actual,\n      max = _ref.max;\n\n  var numbers = _toConsumableArray(Array(visible).keys()).map(function (number) {\n    return number + actual - Math.floor(visible / 2);\n  });\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, actual > 1 && React.createElement(ArrowButton, {\n    direction: \"prev\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), numbers.map(function (number) {\n    return number > 0 ? number : undefined;\n  }), actual < max && React.createElement(ArrowButton, {\n    direction: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: styles.total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Total \", max, \" pages\"));\n};\n\nPagination.propTypes = {\n  visible: PropTypes.number.isRequired,\n  actual: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired\n};\nexport default Pagination;","map":{"version":3,"sources":["/Users/mateusz/Projects/website/django_react/frontend/src/components/Pagination/Pagination.js"],"names":["React","Fragment","PropTypes","ArrowButton","styles","Pagination","visible","actual","max","numbers","Array","keys","map","number","Math","floor","container","undefined","total","propTypes","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA8B;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,MAAkB,QAAlBA,MAAkB;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAC/C,MAAMC,OAAO,GAAG,mBAAIC,KAAK,CAACJ,OAAD,CAAL,CAAeK,IAAf,EAAJ,EAA2BC,GAA3B,CACd,UAAAC,MAAM;AAAA,WAAIA,MAAM,GAAGN,MAAT,GAAkBO,IAAI,CAACC,KAAL,CAAWT,OAAO,GAAG,CAArB,CAAtB;AAAA,GADQ,CAAhB;;AAGA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACY,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,MAAM,GAAG,CAAT,IAAc,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEGE,OAAO,CAACG,GAAR,CAAY,UAAAC,MAAM;AAAA,WAAKA,MAAM,GAAG,CAAT,GAAaA,MAAb,GAAsBI,SAA3B;AAAA,GAAlB,CAFH,EAGGV,MAAM,GAAGC,GAAT,IAAgB,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHnB,CADF,EAME;AAAG,IAAA,SAAS,EAAEJ,MAAM,CAACc,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmCV,GAAnC,WANF,CADF;AAUD,CAdD;;AAgBAH,UAAU,CAACc,SAAX,GAAsB;AACpBb,EAAAA,OAAO,EAAEJ,SAAS,CAACW,MAAV,CAAiBO,UADN;AAEpBb,EAAAA,MAAM,EAAEL,SAAS,CAACW,MAAV,CAAiBO,UAFL;AAGpBZ,EAAAA,GAAG,EAAEN,SAAS,CAACW,MAAV,CAAiBO;AAHF,CAAtB;AAMA,eAAef,UAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ArrowButton from \"./ArrowButton/ArrowButton\";\nimport styles from \"./styles.module.css\";\n\nconst Pagination = ({ visible, actual, max }) => {\n  const numbers = [...Array(visible).keys()].map(\n    number => number + actual - Math.floor(visible / 2)\n  );\n  return (\n    <Fragment>\n      <div className={styles.container}>\n        {actual > 1 && <ArrowButton direction=\"prev\" />}\n        {numbers.map(number => (number > 0 ? number : undefined))}\n        {actual < max && <ArrowButton direction=\"next\" />}\n      </div>\n      <p className={styles.total}>Total {max} pages</p>\n    </Fragment>\n  );\n};\n\nPagination.propTypes ={\n  visible: PropTypes.number.isRequired,\n  actual: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired\n}\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}