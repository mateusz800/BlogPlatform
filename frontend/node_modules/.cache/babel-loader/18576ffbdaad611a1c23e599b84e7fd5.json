{"ast":null,"code":"import _toConsumableArray from \"/Users/mateusz/Projects/website/django_react/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/mateusz/Projects/website/django_react/frontend/src/components/Pagination/Pagination.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ArrowButton from \"./Buttons/ArrowButton\";\nimport { nextPage } from \"../../actions/articleActions\";\nimport styles from \"./styles.module.css\";\n\nvar Pagination = function Pagination(_ref) {\n  var visible = _ref.visible,\n      actual = _ref.actual,\n      max = _ref.max;\n\n  var numbers = _toConsumableArray(Array(visible).keys()).map(function (number) {\n    var actualNumber = number + actual - Math.floor(visible / 2);\n\n    if (actualNumber <= max) {\n      return actualNumber;\n    }\n\n    return;\n  });\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, actual > 1 && React.createElement(ArrowButton, {\n    direction: \"prev\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), numbers.map(function (number) {\n    return number > 0 ? number : undefined;\n  }), actual < max && React.createElement(ArrowButton, {\n    direction: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: styles.total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Total \", max, \" pages\"));\n};\n\nPagination.propTypes = {\n  visible: PropTypes.number.isRequired,\n  actual: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired\n};\nexport default Pagination;","map":{"version":3,"sources":["/Users/mateusz/Projects/website/django_react/frontend/src/components/Pagination/Pagination.js"],"names":["React","Fragment","connect","PropTypes","ArrowButton","nextPage","styles","Pagination","visible","actual","max","numbers","Array","keys","map","number","actualNumber","Math","floor","container","undefined","total","propTypes","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA8B;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,MAAkB,QAAlBA,MAAkB;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAC/C,MAAMC,OAAO,GAAG,mBAAIC,KAAK,CAACJ,OAAD,CAAL,CAAeK,IAAf,EAAJ,EAA2BC,GAA3B,CAA+B,UAAAC,MAAM,EAAI;AACvD,QAAMC,YAAY,GAAGD,MAAM,GAAGN,MAAT,GAAkBQ,IAAI,CAACC,KAAL,CAAWV,OAAO,GAAG,CAArB,CAAvC;;AACA,QAAIQ,YAAY,IAAIN,GAApB,EAAyB;AACvB,aAAOM,YAAP;AACD;;AACD;AACD,GANe,CAAhB;;AAOA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACa,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,MAAM,GAAG,CAAT,IAAc,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEGE,OAAO,CAACG,GAAR,CAAY,UAAAC,MAAM;AAAA,WAAKA,MAAM,GAAG,CAAT,GAAaA,MAAb,GAAsBK,SAA3B;AAAA,GAAlB,CAFH,EAGGX,MAAM,GAAGC,GAAT,IAAgB,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHnB,CADF,EAME;AAAG,IAAA,SAAS,EAAEJ,MAAM,CAACe,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmCX,GAAnC,WANF,CADF;AAUD,CAlBD;;AAoBAH,UAAU,CAACe,SAAX,GAAuB;AACrBd,EAAAA,OAAO,EAAEL,SAAS,CAACY,MAAV,CAAiBQ,UADL;AAErBd,EAAAA,MAAM,EAAEN,SAAS,CAACY,MAAV,CAAiBQ,UAFJ;AAGrBb,EAAAA,GAAG,EAAEP,SAAS,CAACY,MAAV,CAAiBQ;AAHD,CAAvB;AAMA,eAAehB,UAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ArrowButton from \"./Buttons/ArrowButton\";\nimport { nextPage } from \"../../actions/articleActions\";\nimport styles from \"./styles.module.css\";\n\nconst Pagination = ({ visible, actual, max }) => {\n  const numbers = [...Array(visible).keys()].map(number => {\n    const actualNumber = number + actual - Math.floor(visible / 2);\n    if (actualNumber <= max) {\n      return actualNumber;\n    }\n    return;\n  });\n  return (\n    <Fragment>\n      <div className={styles.container}>\n        {actual > 1 && <ArrowButton direction=\"prev\" />}\n        {numbers.map(number => (number > 0 ? number : undefined))}\n        {actual < max && <ArrowButton direction=\"next\"/>}\n      </div>\n      <p className={styles.total}>Total {max} pages</p>\n    </Fragment>\n  );\n};\n\nPagination.propTypes = {\n  visible: PropTypes.number.isRequired,\n  actual: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}