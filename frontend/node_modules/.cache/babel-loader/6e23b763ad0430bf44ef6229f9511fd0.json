{"ast":null,"code":"import _slicedToArray from \"/Users/mateusz/Projects/website/django_react/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mateusz/Projects/website/django_react/frontend/src/components/Card/Card.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Author from \"../Author/Author\";\nimport Image from \"../Image/Image\";\nimport Video from \"../VideoOnHover/Video\";\nimport PlayButton from \"../VideoOnHover/PlayButton/PlayButton\";\nimport styles from \"./styles.module.css\";\n\nvar Card = function Card(_ref) {\n  var image = _ref.image,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      author = _ref.author,\n      date = _ref.date,\n      video = _ref.video,\n      children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hover = _useState2[0],\n      setHover = _useState2[1];\n\n  function handleHover() {\n    setHover(!hover);\n  }\n\n  return React.createElement(\"div\", {\n    className: styles.card,\n    onMouseEnter: handleHover,\n    onMouseLeave: handleHover,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, video && React.createElement(Video, {\n    src: video,\n    image: image,\n    muted: true,\n    play: hover,\n    height: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(PlayButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), !video && image && React.createElement(Image, {\n    src: image,\n    height: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), (author || date) && React.createElement(\"div\", {\n    className: styles.details,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, author && React.createElement(Author, {\n    name: author.name,\n    image: author.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), date && React.createElement(\"h5\", {\n    className: styles.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, date)), React.createElement(\"div\", {\n    className: styles.p,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, title && React.createElement(\"h1\", {\n    className: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, title), subtitle && React.createElement(\"h3\", {\n    className: styles.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, subtitle), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, children)));\n};\n\nCard.propTypes = {\n  /** \n   * Title of the card.\n   */\n  title: PropTypes.string,\n\n  /** \n   * Subtitle of the content that card presents.\n   */\n  subtitle: PropTypes.string,\n\n  /**\n   * Author of the article\n   */\n  author: PropTypes.object,\n\n  /**\n   * A string representation of the date when that article was published.\n   */\n  date: PropTypes.string,\n\n  /**\n   * Url with image.\n   * when video property is set the given image will be a poster of the video.\n   */\n  image: PropTypes.string,\n\n  /**\n   * Content of the card.\n   * Everything that is under title (subtitle).\n   */\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.element])\n};\nexport default Card;","map":{"version":3,"sources":["/Users/mateusz/Projects/website/django_react/frontend/src/components/Card/Card.js"],"names":["React","useState","PropTypes","Author","Image","Video","PlayButton","styles","Card","image","title","subtitle","author","date","video","children","hover","setHover","handleHover","card","details","name","p","propTypes","string","object","oneOfType","array","element"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Author from \"../Author/Author\";\nimport Image from \"../Image/Image\";\nimport Video from \"../VideoOnHover/Video\";\nimport PlayButton from \"../VideoOnHover/PlayButton/PlayButton\";\nimport styles from \"./styles.module.css\";\n\nconst Card = ({ image, title, subtitle, author, date, video, children }) => {\n  const [hover, setHover] = useState(false);\n\n  function handleHover() {\n    setHover(!hover);\n  }\n\n  return (\n    <div\n      className={styles.card}\n      onMouseEnter={handleHover}\n      onMouseLeave={handleHover}\n    >\n      {video && (\n        <Video src={video} image={image} muted={true} play={hover} height={200}>\n          <PlayButton />\n        </Video>\n      )}\n      {!video && image && <Image src={image} height={200} />}\n      {(author || date) && (\n        <div className={styles.details}>\n          {author && <Author name={author.name} image={author.image} />}\n          {date && <h5 className={styles.date}>{date}</h5>}\n        </div>\n      )}\n      <div className={styles.p}>\n        {title && <h1 className={styles.title}>{title}</h1>}\n        {subtitle && <h3 className={styles.subtitle}>{subtitle}</h3>}\n        <div>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  /** \n   * Title of the card.\n   */\n  title: PropTypes.string,\n  /** \n   * Subtitle of the content that card presents.\n   */\n  subtitle: PropTypes.string,\n  /**\n   * Author of the article\n   */\n  author: PropTypes.object,\n  /**\n   * A string representation of the date when that article was published.\n   */\n  date: PropTypes.string,\n  /**\n   * Url with image.\n   * when video property is set the given image will be a poster of the video.\n   */\n  image: PropTypes.string,\n  /**\n   * Content of the card.\n   * Everything that is under title (subtitle).\n   */\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.element])\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}