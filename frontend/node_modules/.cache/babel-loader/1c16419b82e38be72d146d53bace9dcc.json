{"ast":null,"code":"import _toConsumableArray from \"/Users/mateusz/Projects/website/django_react/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/mateusz/Projects/website/django_react/frontend/src/components/Pagination/Pagination.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ArrowButton from \"./Buttons/ArrowButton\";\nimport PageNumber from \"./Buttons/PageNumber\";\nimport { changePage } from \"../../actions/articleActions\";\nimport styles from \"./styles.module.css\";\nimport { Link } from \"react-router-dom\";\n\nvar Pagination = function Pagination(_ref) {\n  var visible = _ref.visible,\n      actual = _ref.actual,\n      max = _ref.max;\n\n  var numbers = _toConsumableArray(Array(visible).keys()).map(function (number) {\n    var actualNumber = number + actual - Math.floor(visible / 2);\n\n    if (actualNumber <= max) {\n      return actualNumber;\n    }\n\n    return;\n  });\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, actual > 1 ? React.createElement(Link, {\n    to: \"/blog/page/\".concat(actual - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(ArrowButton, {\n    direction: \"prev\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })) : React.createElement(ArrowButton, {\n    direction: \"prev\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), numbers.map(function (number) {\n    return React.createElement(Link, {\n      to: \"/blog/page/\".concat(number),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, number > 0 ? React.createElement(PageNumber, {\n      number: number,\n      key: number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }) : undefined);\n  }), actual < max && React.createElement(Link, {\n    to: \"/blog/page/\".concat(actual + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ArrowButton, {\n    direction: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    className: styles.total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Total \", max, \" pages\"));\n};\n\nPagination.propTypes = {\n  visible: PropTypes.number.isRequired,\n  actual: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired\n};\nexport default Pagination;","map":{"version":3,"sources":["/Users/mateusz/Projects/website/django_react/frontend/src/components/Pagination/Pagination.js"],"names":["React","Fragment","connect","PropTypes","ArrowButton","PageNumber","changePage","styles","Link","Pagination","visible","actual","max","numbers","Array","keys","map","number","actualNumber","Math","floor","container","undefined","total","propTypes","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA8B;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,MAAkB,QAAlBA,MAAkB;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAC/C,MAAMC,OAAO,GAAG,mBAAIC,KAAK,CAACJ,OAAD,CAAL,CAAeK,IAAf,EAAJ,EAA2BC,GAA3B,CAA+B,UAAAC,MAAM,EAAI;AACvD,QAAMC,YAAY,GAAGD,MAAM,GAAGN,MAAT,GAAkBQ,IAAI,CAACC,KAAL,CAAWV,OAAO,GAAG,CAArB,CAAvC;;AACA,QAAIQ,YAAY,IAAIN,GAApB,EAAyB;AACvB,aAAOM,YAAP;AACD;;AACD;AACD,GANe,CAAhB;;AAOA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACc,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,MAAM,GAAG,CAAT,GACC,oBAAC,IAAD;AAAM,IAAA,EAAE,uBAAgBA,MAAM,GAAG,CAAzB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAIC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,MAAvB;AAA8B,IAAA,QAAQ,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMGE,OAAO,CAACG,GAAR,CAAY,UAAAC,MAAM;AAAA,WACjB,oBAAC,IAAD;AAAM,MAAA,EAAE,uBAAgBA,MAAhB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,MAAM,GAAG,CAAT,GACC,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAEA,MAApB;AAA4B,MAAA,GAAG,EAAEA,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGCK,SAJJ,CADiB;AAAA,GAAlB,CANH,EAeGX,MAAM,GAAGC,GAAT,IACC,oBAAC,IAAD;AAAM,IAAA,EAAE,uBAAgBD,MAAM,GAAG,CAAzB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBJ,CADF,EAsBE;AAAG,IAAA,SAAS,EAAEJ,MAAM,CAACgB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmCX,GAAnC,WAtBF,CADF;AA0BD,CAlCD;;AAoCAH,UAAU,CAACe,SAAX,GAAuB;AACrBd,EAAAA,OAAO,EAAEP,SAAS,CAACc,MAAV,CAAiBQ,UADL;AAErBd,EAAAA,MAAM,EAAER,SAAS,CAACc,MAAV,CAAiBQ,UAFJ;AAGrBb,EAAAA,GAAG,EAAET,SAAS,CAACc,MAAV,CAAiBQ;AAHD,CAAvB;AAMA,eAAehB,UAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ArrowButton from \"./Buttons/ArrowButton\";\nimport PageNumber from \"./Buttons/PageNumber\";\nimport { changePage } from \"../../actions/articleActions\";\nimport styles from \"./styles.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Pagination = ({ visible, actual, max }) => {\n  const numbers = [...Array(visible).keys()].map(number => {\n    const actualNumber = number + actual - Math.floor(visible / 2);\n    if (actualNumber <= max) {\n      return actualNumber;\n    }\n    return;\n  });\n  return (\n    <Fragment>\n      <div className={styles.container}>\n        {actual > 1 ? (\n          <Link to={`/blog/page/${actual - 1}`}>\n            <ArrowButton direction=\"prev\" />\n          </Link>\n        ):<ArrowButton direction=\"prev\" disabled={true}/>}\n        {numbers.map(number => (\n          <Link to={`/blog/page/${number}`}>\n            {number > 0 ? (\n              <PageNumber number={number} key={number} />\n            ) : (\n              undefined\n            )}\n          </Link>\n        ))}\n        {actual < max && (\n          <Link to={`/blog/page/${actual + 1}`}>\n            <ArrowButton direction=\"next\" />\n          </Link>\n        )}\n      </div>\n      <p className={styles.total}>Total {max} pages</p>\n    </Fragment>\n  );\n};\n\nPagination.propTypes = {\n  visible: PropTypes.number.isRequired,\n  actual: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}